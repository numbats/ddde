---
title: "ETC5521 Worksheet Week 8"
subtitle: "Going beyond two variables, exploring high dimensions"
author: "Prof. Di Cook"
quarto-required: ">=1.3.0"
format:
    unilur-html:
        output-file: worksheet.html
        embed-resources: true
        css: "../assets/tutorial.css"
    unilur-html+solution:
        output-file: worksheetsol.html
        embed-resources: true
        css: "../assets/tutorial.css"
        show-solution: true
code-fold: true
---

```{r include=FALSE}
#| echo: false
library(tidyverse)
library(patchwork)
library(colorspace)
library(tourr)
library(cassowaryr)
library(plotly)
library(kableExtra)
library(conflicted)

# Set up chunk for all slides
knitr::opts_chunk$set(
  fig.width = 6,
  fig.height = 4,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 4,
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE,
  dev.args = list(pointsize = 11)
)
options(
  digits = 2,
  width = 80,
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
theme_set(theme_bw(base_size = 14) +
   theme(
     aspect.ratio = 1,
     plot.background = element_rect(fill = 'transparent', colour = NA),
     plot.title.position = "plot",
     plot.title = element_text(size = 24),
     panel.background = element_rect(fill = 'transparent', colour = NA),
     legend.background = element_rect(fill = 'transparent', colour = NA),
     legend.key = element_rect(fill = 'transparent', colour = NA)
   )
)

conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::slice)

```


### Exercise 1: Parkinsons

This dataset is composed of a range of biomedical voice measurements from 31 people, 23 with Parkinson's disease (PD). Each column in the table is a particular voice measure, and each row corresponds one of 195 voice recording from these individuals ("name" column). The main aim of the data is to discriminate healthy people from those with PD, according to "status" column which is set to 0 for healthy and 1 for PD. 

The data is available at [The UCI Machine Learning Repository](https://archive.ics.uci.edu/ml/datasets/Parkinsons) in ASCII CSV format. The rows of the CSV file contain an instance corresponding to one voice recording. There are around six recordings per patient, the name of the patient is identified in the first column. There are 24 variables in the file, including the persons name in column 1. 

The data are originally analysed in:
Max A. Little, Patrick E. McSharry, Eric J. Hunter, Lorraine O. Ramig (2008), 'Suitability of dysphonia measurements for telemonitoring of Parkinson's disease', IEEE Transactions on Biomedical Engineering (to appear).

```{r}
#| eval: true
#| echo: true
library(cassowaryr)
# Load the data
data(pk)
```

a. How many pairwise plots would you need to look at, to look at all of them?

::: unilur-solution

There are 23 numeric variables in the data set, which would require `r 23*22/2` pairwise plots to be made.
:::

b. Compute several of the scagnostics (monotonic, outlying, clumpy2) for the first five variables of variables, except for `name`. (*Note*: We are using just five for computing speed, but the scagnostics could be calculated on all variables.)

```{r}
#| eval: false
#| echo: true
#| label: pk
# Compute the scagnostics on the relevant variables
s <- calc_scags_wide(pk[,2:5],
                scags=c("outlying","monotonic",
                        "clumpy2"))
s
```

::: unilur-solution

```{r}
#| eval: true
#| echo: false
#| message: false
#| label: pk
```

:::

c. Sort the scagnostics, separately by the values on (i) monotonic (ii) outlying (iii) clumpy2, and plot the pair of variables with the highest values on each.

::: unilur-solution

```{r}
# Check the results for monotonic
s %>% 
  select(Var1, Var2, monotonic) %>% 
  arrange(desc(monotonic)) 
ggplot(data=pk, 
       aes(x=`MDVP:Fhi(Hz)`, y=`MDVP:Fo(Hz)`)) + 
  geom_point() + theme(aspect.ratio = 1)
```

The top pair of variables on monotonic has a strong positive association with the majority of points, and a few outliers. The top pair of variables on outlying, is also the top pair on clumpy2, and has outliers with some clumpiness in the mass of points with low values.

:::

d. Make an interactive scatterplot matrix. Browse over it to choose other interesting pairs of variables and make the plots.

::: unilur-solution

```{r}
#| message: false
# Create an interactive splom
s <- s %>%
  mutate(vars = paste(Var1, Var2))
highlight_key(s) %>%
  GGally::ggpairs(columns = 3:5, mapping = aes(label = vars)) %>%
  ggplotly(tooltip = "all", 
           width=500, 
           height=500) %>%
  highlight("plotly_selected") 
```

:::

e. The scagnostics help us to find interesting associations between pairs of variables. However, the problem here is to detect differences between Parkinsons' patients and normal patients. How would you go about that? Think about some ideas long the line of scagnostics but look for differences between the two groups.

::: unilur-solution

```{r}
# One way to examine difference between Parkinsons and healthy
pk_med <- pk %>% 
  select(-name) %>% 
  group_by(status) %>%
  summarise_all(list(median, sd)) %>%
  pivot_longer(
    cols=`MDVP:Fo(Hz)_fn1`:`PPE_fn2`,
    names_to="var", 
    values_to="value") %>%
  separate(var, c("var","stat"), "_") %>%
  mutate(stat = fct_recode(stat,
                           "m"="fn1",
                           "s"="fn2")) %>%
  pivot_wider(names_from=stat,
              values_from=value) %>%
  group_by(var) %>%
  summarise(
    d = (m[status==0]-m[status==1])/sqrt(s[status==0]^2+s[status==1]^2))
pk_med %>% arrange(desc(d)) %>% head()

ggplot(pk, aes(x=factor(status), y=`MDVP:Fo(Hz)`)) + 
  geom_boxplot()

```

Generally we are looking for variables where the differences between the Parkinsons and normal patients are big. You need to measure big, relative to the variance of each group. Doing a two sample t-test for each variable is one approach. Here, I've computed the median for each group of patients and compared the difference in medians relative to the pooled standard deviation in each group.

:::

f. Now try to do this using the scagnostics.

::: unilur-solution

```{r}
# Check the pair of variables already examined
ggplot(data=pk, 
       aes(x=`MDVP:Fhi(Hz)`, 
           y=`MDVP:Fo(Hz)`, 
           colour=factor(status))) + 
  geom_point(alpha=0.5) + 
  scale_colour_discrete_divergingx(palette="Zissou 1") +
  theme(aspect.ratio = 1,
        legend.title = element_blank())
```

```{r}
# Compute scagnostics separately for each group and compare differences
pk_0 <- pk |>
  filter(status == 0)
pk_1 <- pk |>
  filter(status == 1)
s_0 <- calc_scags_wide(pk_0[,2:5],
                scags=c("outlying","monotonic",
                        "clumpy2"))
s_1 <- calc_scags_wide(pk_1[,2:5],
                scags=c("outlying","monotonic",
                        "clumpy2"))
s_0 <- s_0 |>
  mutate(status = 0)
s_1 <- s_1 |>
  mutate(status = 1)
s <- bind_rows(s_0, s_1)  
s_wide <- s |>
  pivot_longer(outlying:monotonic, names_to="scag", values_to="value") |>
  pivot_wider(names_from = status, values_from = "value") |>
  mutate(d = abs(`1`-`0`)) |>
  arrange(desc(d))

```

```{r}
# Plot top pair
ggplot(data=pk, 
       aes(x=`MDVP:Jitter(%)`, 
           y=`MDVP:Fo(Hz)`, 
           colour=factor(status))) + 
  geom_point(alpha=0.5) + 
  scale_colour_discrete_divergingx(palette="Zissou 1") +
  theme(aspect.ratio = 1,
        legend.title = element_blank())
```

:::